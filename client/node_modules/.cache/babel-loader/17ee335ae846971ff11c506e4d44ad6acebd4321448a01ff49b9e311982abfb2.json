{"ast":null,"code":"var _jsxFileName = \"/Users/louie/Documents/GitHub/leafletapp/client/src/newObjectOffcanvas.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './newObjectOffcanvas.css';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewObjectOffcanvas = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"newEntryButton\",\n      variant: \"primary\",\n      onClick: handleShow,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"addTitle\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      placement: \"end\",\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Create a new Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(NewObjectOffcanvas, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = NewObjectOffcanvas;\nexport default NewObjectOffcanvas;\nvar _c;\n$RefreshReg$(_c, \"NewObjectOffcanvas\");","map":{"version":3,"names":["useState","Button","Offcanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","NewObjectOffcanvas","_s","show","setShow","handleClose","handleShow","children","className","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","placement","Header","closeButton","Title","Body","_c","$RefreshReg$"],"sources":["/Users/louie/Documents/GitHub/leafletapp/client/src/newObjectOffcanvas.js"],"sourcesContent":["import { useState } from 'react';\nimport './newObjectOffcanvas.css';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\n\nconst NewObjectOffcanvas = () =>{\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    return (\n        <>\n          <Button className='newEntryButton' variant=\"primary\" onClick={handleShow}>\n            <h1 className='addTitle'>+</h1>\n          </Button>\n    \n          <Offcanvas show={show} onHide={handleClose} placement='end'>\n            <Offcanvas.Header closeButton>\n              <Offcanvas.Title>Create a new Entry</Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              Some text as placeholder. In real life you can have the elements you\n              have chosen. Like, text, images, lists, etc.\n            </Offcanvas.Body>\n          </Offcanvas>\n        </>\n      );\n}\n\nexport default NewObjectOffcanvas;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,0BAA0B;AACjC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGlD,MAAMC,kBAAkB,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMW,WAAW,GAAGA,CAAA,KAAMD,OAAO,CAAC,KAAK,CAAC;EACxC,MAAME,UAAU,GAAGA,CAAA,KAAMF,OAAO,CAAC,IAAI,CAAC;EAGtC,oBACIN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACH,MAAM;MAACa,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAC,SAAS;MAACC,OAAO,EAAEJ,UAAW;MAAAC,QAAA,eACvET,OAAA;QAAIU,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAEThB,OAAA,CAACF,SAAS;MAACO,IAAI,EAAEA,IAAK;MAACY,MAAM,EAAEV,WAAY;MAACW,SAAS,EAAC,KAAK;MAAAT,QAAA,gBACzDT,OAAA,CAACF,SAAS,CAACqB,MAAM;QAACC,WAAW;QAAAX,QAAA,eAC3BT,OAAA,CAACF,SAAS,CAACuB,KAAK;UAAAZ,QAAA,EAAC;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACnBhB,OAAA,CAACF,SAAS,CAACwB,IAAI;QAAAb,QAAA,EAAC;MAGhB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAAAZ,EAAA,CAvBKD,kBAAkB;AAAAoB,EAAA,GAAlBpB,kBAAkB;AAyBxB,eAAeA,kBAAkB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}