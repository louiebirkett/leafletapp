{"ast":null,"code":"var _jsxFileName = \"/Users/louie/Documents/GitHub/leafletapp/client/src/App.js\";\nimport React from 'react';\nimport LeafletMap from './leafletmap';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Offcanvas } from 'bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Skipper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"thisButton\",\n          children: \"This is a Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"This but\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n          show: show,\n          onHide: handleClose,\n          ...props,\n          children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n              children: \"Offcanvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n            children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LeafletMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","LeafletMap","Button","Offcanvas","jsxDEV","_jsxDEV","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","handleClose","props","Header","closeButton","Title","Body","_c","$RefreshReg$"],"sources":["/Users/louie/Documents/GitHub/leafletapp/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport LeafletMap from './leafletmap';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Offcanvas } from 'bootstrap';\n\n\n\nfunction App() {\n  return (  \n    <div>\n      <h1 className='title'>Skipper</h1>\n      <div>\n        \n        <div className='buttonContainer'>\n          \n          <Button className='thisButton'>This is a Button</Button>\n          <Button>This but</Button>\n          <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n          \n          \n        </div>\n        \n      </div>\n      \n      \n      <div>\n        <LeafletMap/>\n      </div>\n    </div>\n  );\n}\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,sCAAsC;AAC7C,SAASC,SAAS,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA;MAAIG,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCP,OAAA;MAAAE,QAAA,eAEEF,OAAA;QAAKG,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAE9BF,OAAA,CAACH,MAAM;UAACM,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDP,OAAA,CAACH,MAAM;UAAAK,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzBP,OAAA,CAACF,SAAS;UAACU,IAAI,EAAEA,IAAK;UAACC,MAAM,EAAEC,WAAY;UAAA,GAAKC,KAAK;UAAAT,QAAA,gBACvDF,OAAA,CAACF,SAAS,CAACc,MAAM;YAACC,WAAW;YAAAX,QAAA,eAC3BF,OAAA,CAACF,SAAS,CAACgB,KAAK;cAAAZ,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACnBP,OAAA,CAACF,SAAS,CAACiB,IAAI;YAAAb,QAAA,EAAC;UAGhB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eAGNP,OAAA;MAAAE,QAAA,eACEF,OAAA,CAACJ,UAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,GA/BQf,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}