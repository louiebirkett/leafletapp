{"ast":null,"code":"var _jsxFileName = \"/Users/louie/Documents/GitHub/leafletapp/client/src/leafletmap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer, useMap } from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css'; // Re-uses images from ~leaflet package\nimport L from 'leaflet';\nimport 'leaflet-defaulticon-compatibility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:8080/objects';\nconst LeafletMap = () => {\n  _s();\n  const mapRef = useRef(null);\n  const latitude = 50.83106;\n  const longitude = -0.13352;\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        setMarkers(data);\n        console.log(data);\n      } catch (error) {\n        console.log(\"Error fetching markers:, error\");\n      }\n    };\n    fetchMarkers();\n  }, []);\n  const position = [50.83106, -0.13352];\n  return (\n    /*#__PURE__*/\n    // Make sure you set the height and width of the map container otherwise the map won't show\n    _jsxDEV(MapContainer, {\n      center: [latitude, longitude],\n      zoom: 15,\n      ref: mapRef,\n      style: {\n        height: \"100vh\",\n        width: \"100vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"This is a Popup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [marker.latitude, marker.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/leafletapp/client/images/Scrap-Metal.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 85\n          }, this), \" Example Popup for database markers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  );\n};\n_s(LeafletMap, \"RNkk2wwhP3p8/rQzy0DYlbeH714=\");\n_c = LeafletMap;\nexport default LeafletMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapContainer","Marker","Popup","TileLayer","useMap","L","jsxDEV","_jsxDEV","url","LeafletMap","_s","mapRef","latitude","longitude","markers","setMarkers","fetchMarkers","response","fetch","data","json","console","log","error","position","center","zoom","ref","style","height","width","children","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","marker","index","src","_c","$RefreshReg$"],"sources":["/Users/louie/Documents/GitHub/leafletapp/client/src/leafletmap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer, useMap } from \"react-leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css'; // Re-uses images from ~leaflet package\nimport L from 'leaflet';\nimport 'leaflet-defaulticon-compatibility';\n\n\nconst url = 'http://localhost:8080/objects';\n\n\n \n\nconst LeafletMap = () => {\n    const mapRef = useRef(null)\n    const latitude = 50.83106;\n    const longitude = -0.13352;\n\n    const [markers, setMarkers] = useState([]);\n\n    useEffect(() => {\n      const fetchMarkers = async () => {\n        try {\n          const response = await fetch(url);\n          const data = await response.json();\n          setMarkers(data);\n          console.log(data);\n        }\n        catch(error){\n          console.log(\"Error fetching markers:, error\");\n        }\n      };\n\n      fetchMarkers();\n    }, []);\n\n\n    const position = [50.83106, -0.13352];\n    return ( \n        // Make sure you set the height and width of the map container otherwise the map won't show\n          <MapContainer center={[latitude, longitude]} zoom={15} ref={mapRef} style={{height: \"100vh\", width: \"100vw\"}}>\n            <TileLayer\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            <Marker position={position}>\n                <Popup>\n                    This is a Popup\n                </Popup>\n            </Marker>\n\n            {markers.map((marker, index) => (\n              <Marker key={index} position={[marker.latitude, marker.longitude]}>\n                <Popup> <img src=\"/leafletapp/client/images/Scrap-Metal.png\"></img> <br></br> Example Popup for database markers</Popup>\n              </Marker>\n            ))}\n          </MapContainer> \n      );\n    };\n    \n    export default LeafletMap;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC9E,OAAO,0BAA0B;AACjC,OAAO,sFAAsF,CAAC,CAAC;AAC/F,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,GAAG,GAAG,+BAA+B;AAK3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMc,QAAQ,GAAG,QAAQ;EACzB,MAAMC,SAAS,GAAG,CAAC,OAAO;EAE1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1CF,SAAS,CAAC,MAAM;IACd,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QACjC,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACI,IAAI,CAAC;QAChBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACnB,CAAC,CACD,OAAMI,KAAK,EAAC;QACVF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC/C;IACF,CAAC;IAEDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMQ,QAAQ,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC;EACrC;IAAA;IACI;IACEjB,OAAA,CAACP,YAAY;MAACyB,MAAM,EAAE,CAACb,QAAQ,EAAEC,SAAS,CAAE;MAACa,IAAI,EAAE,EAAG;MAACC,GAAG,EAAEhB,MAAO;MAACiB,KAAK,EAAE;QAACC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC3GxB,OAAA,CAACJ,SAAS;QACR6B,WAAW,EAAC,yFAAyF;QACrGxB,GAAG,EAAC;MAAoD;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAEF7B,OAAA,CAACN,MAAM;QAACuB,QAAQ,EAAEA,QAAS;QAAAO,QAAA,eACvBxB,OAAA,CAACL,KAAK;UAAA6B,QAAA,EAAC;QAEP;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAERtB,OAAO,CAACuB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBhC,OAAA,CAACN,MAAM;QAAauB,QAAQ,EAAE,CAACc,MAAM,CAAC1B,QAAQ,EAAE0B,MAAM,CAACzB,SAAS,CAAE;QAAAkB,QAAA,eAChExB,OAAA,CAACL,KAAK;UAAA6B,QAAA,GAAC,GAAC,eAAAxB,OAAA;YAAKiC,GAAG,EAAC;UAA2C;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,eAAA7B,OAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,uCAAmC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD7GG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;AAErB,CAAC;AAAC1B,EAAA,CA9CAD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAgDZ,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}